using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace httpServer
{
    class Log
    {
        enum MyLogLevel   
        {
            LOG_DEBUG = 0,
            LOG_INFO,
            LOG_WARNING,
            LOG_ERROR,
        }

        static private MyLogLevel logLevel = MyLogLevel.LOG_DEBUG;

        public static void WriteCrash(Exception ex)
        {
            string log_folder = AppDomain.CurrentDomain.BaseDirectory + "Log";
            string filePath = log_folder + "\\Crash.log";
            if (!System.IO.Directory.Exists(log_folder))
            {
                System.IO.Directory.CreateDirectory(log_folder);
            }
            if (!System.IO.File.Exists(filePath))
            {
                System.IO.File.Create(filePath).Close();
            }
            System.IO.StreamWriter sw = System.IO.File.AppendText(filePath);
            sw.WriteLine("-----------------------------------------------");
            sw.WriteLine("Date:" + DateTime.Now.ToShortDateString() + "-" + DateTime.Now.ToLongTimeString());
            sw.WriteLine(ex.Message);
            sw.WriteLine(ex.StackTrace);
            sw.WriteLine("-----------------------------------------------");
            sw.Close();
        }

        private static void Write(String msg)
        {
            string log_folder = AppDomain.CurrentDomain.BaseDirectory + "Log";
            string filePath = log_folder + "\\Run.log";
            if (!System.IO.Directory.Exists(log_folder))
            {
                System.IO.Directory.CreateDirectory(log_folder);
            }
            if (!System.IO.File.Exists(filePath))
            {
                System.IO.File.Create(filePath).Close();
            }
            System.IO.StreamWriter sw = System.IO.File.AppendText(filePath);
            sw.WriteLine("["+DateTime.Now.ToShortDateString() + "-" + DateTime.Now.ToLongTimeString() +"] " + msg);
            sw.Close();
        }

        public static void WriteDebug(string message)
        {
             Write(message);
        }

        public static void WriteInfo(string message)
        {
            if (logLevel > MyLogLevel.LOG_INFO)
            {
                return;
            }
            else
            {
                Write(message);
            }
        }

        public static void WriteWarning(string message)
        {
            if (logLevel > MyLogLevel.LOG_WARNING)
            {
                return;
            }
            else
            {
                Write(message);
            }
        }

        public static void WriteError(string message)
        {
            if (logLevel > MyLogLevel.LOG_ERROR)
            {
                return;
            }
            else
            {
                Write(message);
            }
        }
    }
}
