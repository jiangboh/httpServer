using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace httpServer
{
    /*
    public enum TaskStatus   //任务状态
    {
        TaskNull = 0, //0:无该任务；
        NoSendReqst = 1, //1:未下发请求；
        SendReqst = 2, //2:已下发请示;
        SendTask = 3, //3:已下发任务;
        ReponseOk = 4,　　//4:已收到回应,状态为成功;
        ReponseFail = 5,　　//5:已收到回应，状态为失败;
        TimeOut = 6  //6：任务超时
    }

    public enum TaskType   //任务类型
    {
        TaskNull = 0, //0:无任务；
        UpgradTask = 1, //1:升级任务；
        GetLogTask = 2, //2:获取Log任务；
        GetParameterValuesTask = 3, //3:获取参数值
        SetParameterValuesTask = 4,  //4：设置参数值
        RebootTask = 5  //重启AP任务
    }
    */
    public class GlobalParameter
    {
        #region  全局参数定义
        /// <summary>
        /// 服务器运行状态(true:正常运行;false:未正常运行)
        /// </summary>
        static public bool httpServerRun = true;
        /// <summary>
        /// 当前在线的AP信息
        /// </summary>
        static public ApConnHmsList apConnHmsList = new ApConnHmsList();

        //static public MySqlDbHelper myDB11 = new MySqlDbHelper();

        /// <summary>
        /// 网管连接字符串
        /// </summary>
        static public String DB_ConnStr = "192.168.88.101";
        /// <summary>
        /// 本机IP
        /// </summary>
        static public String ThisIp = "192.168.88.101";
        
        /// <summary>
        /// http Server的用户名
        /// </summary>
        static public String HttpServerName = "name";
        /// <summary>
        /// http Server的密码
        /// </summary>
        static public String HttpServerPasswd = "passwd";

        /// <summary>
        /// 文件服务器地址
        /// </summary>
        static public String UploadServerUrl = "http://" + ThisIp + ":12345"; //Kpi

        /// <summary>
        /// http Server的根地址
        /// </summary>
        static public String UploadServerRootPath = "d://";
        /// <summary>
        /// 文件服务器连接用户名
        /// </summary>
        static public String UploadServerUser = "uploadKpiUser"; //Kpi
        /// <summary>
        /// 文件服务器连接密码
        /// </summary>
        static public String UploadServerPasswd = "UploadKpiPassWd"; //Kpi

        /// <summary>
        /// NTP Server 1 地址
        /// </summary>
        static public String Ntp1ServerPath = "192.168.88.101"; //Kpi
        /// <summary>
        /// NTP Server 2 地址
        /// </summary>
        static public String Ntp2ServerPath = "192.168.88.101"; //Kpi

        /// <summary>
        /// AP 反向连接用户名
        /// </summary>
        static public String ConnectionRequestUsername = "test";
        /// <summary>
        /// AP 反向连接密码
        /// </summary>
        static public String ConnectionRequestPassWd = "test";

        /// <summary>
        /// AP心跳超时时间，（单位：分钟）
        /// </summary>
        static public int ApOffLineTime = 4;   //

        /// <summary>
        /// XML文件的根节点（"Device."或者"InternetGatewayDevice."）
        /// </summary>
        static public string XmlRootNode = "Device.";

        #endregion
        
        /// <summary>
        /// 获取配置文件
        /// </summary>
        static public void SetGlobalParameter()
        {
            DB_ConnStr = ConfigurationManager.ConnectionStrings["dbConStr"].ToString();

            ThisIp = ConfigurationManager.AppSettings["HttpServerIp"].ToString();
            HttpServerName = ConfigurationManager.AppSettings["HttpServerName"].ToString();
            HttpServerPasswd = ConfigurationManager.AppSettings["HttpServerPasswd"].ToString();

            Ntp1ServerPath = ConfigurationManager.AppSettings["Ntp1ServerPath"].ToString();
            Ntp2ServerPath = ConfigurationManager.AppSettings["Ntp2ServerPath"].ToString();

            ConnectionRequestUsername = ConfigurationManager.AppSettings["ConnectionRequestUsername"].ToString();
            ConnectionRequestPassWd = ConfigurationManager.AppSettings["ConnectionRequestPassWd"].ToString();

            UploadServerRootPath = ConfigurationManager.AppSettings["UploadServerRootPath"].ToString();
            UploadServerUrl = ConfigurationManager.AppSettings["UploadServerUrl"].ToString();
            UploadServerUser = ConfigurationManager.AppSettings["UploadServerUser"].ToString();
            UploadServerPasswd = ConfigurationManager.AppSettings["UploadServerPasswd"].ToString();

            XmlRootNode = ConfigurationManager.AppSettings["XmlRootNode"].ToString();

            ApOffLineTime = int.Parse(ConfigurationManager.AppSettings["ApOffLineTime"].ToString());
            Log.MaxLogFileSize = int.Parse(ConfigurationManager.AppSettings["MaxLogFileSize"].ToString());
        }

        /// <summary>
        /// 关闭应用程序
        /// </summary>
        static public void CloseThisApp()
        {
            MessageBox.Show("HttpServer程序异常退出！", "错误：");
            Application.Exit(); 
        }


    }
}
